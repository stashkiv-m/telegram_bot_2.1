import gspread
from oauth2client.service_account import ServiceAccountCredentials
from telegram import Bot
import os
import json
import random


# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –≥–ª–æ–±–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö
bot = None
worksheet = None


def initialize_bot_and_sheet():

    global bot, worksheet

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–ª—è —Ä–æ–±–æ—Ç–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ –∞–±–æ –ª–æ–∫–∞–ª—å–Ω–æ
    if os.getenv('GOOGLE_APPLICATION_CREDENTIALS_JSON'):
        # –í–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
        credentials_json = os.environ.get('GOOGLE_APPLICATION_CREDENTIALS_JSON')
        credentials_data = json.loads(credentials_json)
    else:
        # –í–∞—Ä—ñ–∞–Ω—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫—É
        local_credentials_path = 'C:/Users/Mykhailo/PycharmProjects/telegram_bot_2.1/general/general_data_base/telegram-bot-user-list-79452f202a61.json'
        with open(local_credentials_path, 'r') as file:
            credentials_data = json.load(file)

    # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Google Sheets API
    scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
    creds = ServiceAccountCredentials.from_json_keyfile_dict(credentials_data, scope)
    client = gspread.authorize(creds)

    # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ç–∞–±–ª–∏—Ü—ñ –∑–∞ —ó—ó ID
    sheet = client.open_by_key('1nZv5QBo_excPo402Ul-a278hyB2-rQbYfqlCcHu-524')
    worksheet = sheet.get_worksheet(0)  # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–µ—Ä—à–æ–≥–æ –∞—Ä–∫—É—à–∞ —Ç–∞–±–ª–∏—Ü—ñ

    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞ –∑ —Ç–æ–∫–µ–Ω–æ–º
    bot_token = '7749471664:AAEp85bkb0szrSBDso9bxU2FSy8JU0RVSEY'
    bot = Bot(token=bot_token)


# –í–∏–∫–ª–∏–∫–∞—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –Ω–∞ –ø–æ—á–∞—Ç–∫—É
initialize_bot_and_sheet()


def send_message_to_all_users(message: str):
    unique_user_ids = set()
    users_data = worksheet.get_all_records()
    for row in users_data:
        user_id = row.get('ID')
        if user_id and user_id not in unique_user_ids:
            unique_user_ids.add(user_id)
            try:
                bot.send_message(chat_id=user_id, text=message)
                print(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
            except Exception as e:
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}. –ü–æ–º–∏–ª–∫–∞: {e}")


def send_image_to_all_users(image_path=None):
    unique_user_ids = set()
    users_data = worksheet.get_all_records()
    for row in users_data:
        user_id = row.get('ID')
        if user_id and user_id not in unique_user_ids:
            unique_user_ids.add(user_id)

            # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø–µ—Ä–µ–¥–∞–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–±–æ –æ–±–∏—Ä–∞—î–º–æ —Ä–∞–Ω–¥–æ–º–Ω–µ, —è–∫—â–æ —à–ª—è—Ö –Ω–µ –≤–∫–∞–∑–∞–Ω–æ
            if image_path:
                final_image_path = image_path
            else:
                base_dir = os.path.dirname(os.path.dirname(os.path.dirname(__file__)))
                img_folder = os.path.join(base_dir, 'img', 'exchange_img')
                images = [f for f in os.listdir(img_folder) if os.path.isfile(os.path.join(img_folder, f))]
                if images:
                    random_image = random.choice(images)
                    final_image_path = os.path.join(img_folder, random_image)
                else:
                    print(f"–£ –ø–∞–ø—Ü—ñ {img_folder} –Ω–µ–º–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω—å.")
                    continue

            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            try:
                with open(final_image_path, 'rb') as photo:
                    bot.send_photo(chat_id=user_id, photo=photo)
                print(f"–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è {final_image_path} –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
            except Exception as e:
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}. –ü–æ–º–∏–ª–∫–∞: {e}")

def send_file_to_all_users(file_path: str):
    unique_user_ids = set()
    users_data = worksheet.get_all_records()
    for row in users_data:
        user_id = row.get('ID')
        if user_id and user_id not in unique_user_ids:
            unique_user_ids.add(user_id)
            try:
                with open(file_path, 'rb') as file:
                    bot.send_document(chat_id=user_id, document=file)
                print(f"–§–∞–π–ª –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
            except Exception as e:
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ —Ñ–∞–π–ª –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}. –ü–æ–º–∏–ª–∫–∞: {e}")


def send_chart_and_metrics_to_all_users(image_path: str, metrics_text: str):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑ –≥—Ä–∞—Ñ—ñ–∫–æ–º —Ç–∞ —Ç–µ–∫—Å—Ç –∑ –º–µ—Ç—Ä–∏–∫–∞–º–∏ –≤—Å—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º.
    """
    unique_user_ids = set()
    users_data = worksheet.get_all_records()
    for row in users_data:
        user_id = row.get('ID')
        if user_id and user_id not in unique_user_ids:
            unique_user_ids.add(user_id)
            try:
                with open(image_path, 'rb') as photo:
                    bot.send_photo(chat_id=user_id, photo=photo, caption=metrics_text[:1024], parse_mode='Markdown')
                    if len(metrics_text) > 1024:
                        bot.send_message(chat_id=user_id, text=metrics_text[1024:], parse_mode='Markdown')
                print(f"–ì—Ä–∞—Ñ—ñ–∫ + –º–µ—Ç—Ä–∏–∫–∏ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}")
            except Exception as e:
                print(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user_id}. –ü–æ–º–∏–ª–∫–∞: {e}")

text_3 = [
    "üá∫üá¶ –ü—Ä–∏–≤—ñ—Ç! –¶–µ –ú—ñ—à–∞ ‚Äî —è —Å—Ç–≤–æ—Ä–∏–≤ —Ü—å–æ–≥–æ –±–æ—Ç–∞! üòä\n\n"
    "–î—è–∫—É—é, —â–æ –∑–∞—Ü—ñ–∫–∞–≤–∏–ª–∏—Å—è —Ç–µ–º–æ—é —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π —ñ –ø—Ä–∏–¥—ñ–ª–∏–ª–∏ —É–≤–∞–≥—É —Ü—å–æ–º—É –ø—Ä–æ—î–∫—Ç—É.\n"
    "–í–∏ ‚Äî –æ–¥–Ω—ñ –∑ –ø–µ—Ä—à–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —ñ –±–æ—Ç –¥–ª—è –≤–∞—Å –±—É–¥–µ –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–º **–Ω–∞–∑–∞–≤–∂–¥–∏**! ‚ù§Ô∏è",

    "ü§ñ –ë–æ—Ç –ø—Ä–∞—Ü—é—î **–∞–≤—Ç–æ–Ω–æ–º–Ω–æ** ‚Äî —Å–∏–≥–Ω–∞–ª–∏ —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∞–ª–≥–æ—Ä–∏—Ç–º—É, —è–∫–∏–π —è —Å—Ç–≤–æ—Ä–∏–≤, –Ω–∞–¥–∏—Ö–∞—é—á–∏—Å—å –∫–Ω–∏–≥–∞–º–∏ üìö –î–∂–µ–∫–∞ –®–≤–∞–≥–µ—Ä–∞ (*¬´–¢–µ—Ö–Ω—ñ—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑¬ª*) —Ç–∞ –ë–µ–Ω–¥–∂–∞–º—ñ–Ω–∞ –ì—Ä–µ—Ö–µ–º–∞ (*¬´–†–æ–∑—É–º–Ω–∏–π —ñ–Ω–≤–µ—Å—Ç–æ—Ä¬ª*).",

    "üìà –Ø –ø–æ—Å—Ç—É–ø–æ–≤–æ –¥–æ–¥–∞—é –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó. –ü–ª–∞–Ω—É—é —ñ–Ω—Ç–µ–≥—Ä—É–≤–∞—Ç–∏ **AI-–∞–Ω–∞–ª—ñ–∑**, –¥–æ–¥–∞—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É **–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç** —Ç–∞ **—Ñ–æ—Ä–µ–∫—Å—É**.",

    "üìù –¢–∞–∫–æ–∂ —è –ø—Ä–∞—Ü—é—é –Ω–∞–¥ —Ñ—É–Ω–∫—Ü—ñ—î—é **Watchlist** ‚Äî –≤–∏ –∑–º–æ–∂–µ—Ç–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∞–∫—Ü—ñ—ó, —è–∫—ñ –≤–∞–º —Å–ø–æ–¥–æ–±–∞–ª–∏—Å—å, –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —ó—Ö–Ω—é —Ü—ñ–Ω—É —Ç–∞ –Ω–æ–≤–∏–Ω–∏ –ø–æ –∫–æ–∂–Ω—ñ–π –∫–æ–º–ø–∞–Ω—ñ—ó.",

    "üì≤ –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–æ —Å–∏–≥–Ω–∞–ª–∏ –Ω–∞–¥—Ö–æ–¥—è—Ç—å —â–æ–¥–Ω—è **–æ 15:00 –∑–∞ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–º —á–∞—Å–æ–º (üá∫üá∏)** ‚Äî —Ü–µ **23:00 –∑–∞ –ö–∏—î–≤–æ–º (üá∫üá¶)**.",

    "ü§ù –Ø–∫—â–æ –≤–∞–º –ø–æ–¥–æ–±–∞—î—Ç—å—Å—è –±–æ—Ç ‚Äî **–ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –Ω–∏–º —ñ–∑ –¥—Ä—É–∑—è–º–∏**. –¶–µ –¥—É–∂–µ –¥–æ–ø–æ–º–æ–∂–µ –ø—Ä–æ—î–∫—Ç—É!"
]

text_2 = (
    "–ü—Ä–∏–≤—ñ—Ç!:\n"
    "üìä –ú–∏ —â–æ–π–Ω–æ –¥–æ–¥–∞–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç–∞–ª—å–Ω–∏—Ö –ø–æ–∫–∞–∑–Ω–∏–∫—ñ–≤ –∫–æ–º–ø–∞–Ω—ñ–π!\n"
    "–¢–µ–ø–µ—Ä –±–æ—Ç –Ω–µ –ª–∏—à–µ –ø–æ–∫–∞–∑—É—î —Ü–∏—Ñ—Ä–∏, –∞ –π –ø–æ—è—Å–Ω—é—î:\n"
    "- —á–∏ –∫–æ–º–ø–∞–Ω—ñ—è –ø—Ä–∏–±—É—Ç–∫–æ–≤–∞,\n"
    "- –Ω–∞—Å–∫—ñ–ª—å–∫–∏ –≤ –Ω–µ—ó –≤–∏—Å–æ–∫—ñ –º–∞—Ä–∂—ñ,\n"
    "- —á–∏ –Ω–µ –º–∞—î –≤–æ–Ω–∞ –Ω–∞–¥–º—ñ—Ä–Ω–æ–≥–æ –±–æ—Ä–≥—É,\n"
    "- —á–∏ –∞–∫—Ü—ñ—è –≤–∏–≥–ª—è–¥–∞—î –Ω–µ–¥–æ–æ—Ü—ñ–Ω–µ–Ω–æ—é —Ç–æ—â–æ.\n\n"
    "ü§ù –ü–æ–¥—ñ–ª—ñ—Ç—å—Å—è –±–æ—Ç–æ–º –∑ –¥—Ä—É–∑—è–º–∏ ‚Äî –Ω–µ—Ö–∞–π —ñ –≤–æ–Ω–∏ –æ—Ç—Ä–∏–º–∞—é—Ç—å –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –¥–æ—Å—Ç—É–ø –¥–æ —Ü–∏—Ö —Ä–æ–∑—É–º–Ω–∏—Ö –ø—ñ–¥–∫–∞–∑–æ–∫!\n\n"
    "üì≤ –ü—Ä–∏—î–¥–Ω—É–π—Ç–µ—Å—å –¥–æ –Ω–∞—à–æ—ó –≥—Ä—É–ø–∏: https://t.me/trade_navigator_channel\n"
    "–ù–µ —Ç—Ä–∏–º–∞–π—Ç–µ —ñ–Ω—Å–∞–π–¥–∏ –ª–∏—à–µ –¥–ª—è —Å–µ–±–µ ‚Äî —Ü–µ —à–∞–Ω—Å –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ! üí∏"
)
text_2_en = (
    "üî• If you've already joined ‚Äî congratulations! You now have full free access to all bot features ‚Äî forever ‚úÖ\n"
    "Even when the bot becomes paid ‚Äî you won‚Äôt be affected üíº\n\n"
    "üìä We've just added automatic analysis of fundamental company metrics!\n"
    "The bot now not only shows numbers, but also explains:\n"
    "- whether the company is profitable,\n"
    "- how strong its margins are,\n"
    "- if it carries too much debt,\n"
    "- and whether the stock looks undervalued.\n\n"
    "ü§ù Share the bot with your friends ‚Äî let them also enjoy free lifetime access to these smart insights!\n\n"
    "üì≤ Join our group: https://t.me/trade_navigator_channel\n"
    "Don't keep the insights to yourself ‚Äî give others a chance too! üí∏"
)
